apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: schemahero-system
spec: {}
status: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    control-plane: schemahero
  name: schemahero
  namespace: schemahero-system
spec:
  selector:
    matchLabels:
      control-plane: schemahero
  serviceName: ""
  template:
    metadata:
      creationTimestamp: null
      labels:
        control-plane: schemahero
    spec:
      containers:
      - command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SECRET_NAME
          value: webhook-server-secret
        - name: SCHEMAHERO_IMAGE_NAME
          value: schemahero/schemahero:0.9.0-alpha.1
        image: schemahero/schemahero-manager:0.9.0-alpha.1
        imagePullPolicy: Always
        name: manager
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
  updateStrategy: {}
status:
  replicas: 0

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  name: tables.schemas.schemahero.io
spec:
  group: schemas.schemahero.io
  names:
    kind: Table
    listKind: TableList
    plural: tables
    singular: table
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Table is the Schema for the tables API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TableSpec defines the desired state of Table
            properties:
              database:
                type: string
              name:
                type: string
              requires:
                items:
                  type: string
                type: array
              schema:
                properties:
                  cockroachdb:
                    properties:
                      columns:
                        items:
                          properties:
                            constraints:
                              properties:
                                notNull:
                                  type: boolean
                              type: object
                            default:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - name
                          - type
                          type: object
                        type: array
                      foreignKeys:
                        items:
                          properties:
                            columns:
                              items:
                                type: string
                              type: array
                            name:
                              type: string
                            onDelete:
                              type: string
                            references:
                              properties:
                                columns:
                                  items:
                                    type: string
                                  type: array
                                table:
                                  type: string
                              required:
                              - columns
                              - table
                              type: object
                          required:
                          - columns
                          - references
                          type: object
                        type: array
                      indexes:
                        items:
                          properties:
                            columns:
                              items:
                                type: string
                              type: array
                            isUnique:
                              type: boolean
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - columns
                          type: object
                        type: array
                      isDeleted:
                        type: boolean
                      primaryKey:
                        items:
                          type: string
                        type: array
                    type: object
                  mysql:
                    properties:
                      columns:
                        items:
                          properties:
                            constraints:
                              properties:
                                notNull:
                                  type: boolean
                              type: object
                            default:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - name
                          - type
                          type: object
                        type: array
                      foreignKeys:
                        items:
                          properties:
                            columns:
                              items:
                                type: string
                              type: array
                            name:
                              type: string
                            onDelete:
                              type: string
                            references:
                              properties:
                                columns:
                                  items:
                                    type: string
                                  type: array
                                table:
                                  type: string
                              required:
                              - columns
                              - table
                              type: object
                          required:
                          - columns
                          - references
                          type: object
                        type: array
                      indexes:
                        items:
                          properties:
                            columns:
                              items:
                                type: string
                              type: array
                            isUnique:
                              type: boolean
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - columns
                          type: object
                        type: array
                      isDeleted:
                        type: boolean
                      primaryKey:
                        items:
                          type: string
                        type: array
                    type: object
                  postgres:
                    properties:
                      columns:
                        items:
                          properties:
                            constraints:
                              properties:
                                notNull:
                                  type: boolean
                              type: object
                            default:
                              type: string
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - name
                          - type
                          type: object
                        type: array
                      foreignKeys:
                        items:
                          properties:
                            columns:
                              items:
                                type: string
                              type: array
                            name:
                              type: string
                            onDelete:
                              type: string
                            references:
                              properties:
                                columns:
                                  items:
                                    type: string
                                  type: array
                                table:
                                  type: string
                              required:
                              - columns
                              - table
                              type: object
                          required:
                          - columns
                          - references
                          type: object
                        type: array
                      indexes:
                        items:
                          properties:
                            columns:
                              items:
                                type: string
                              type: array
                            isUnique:
                              type: boolean
                            name:
                              type: string
                            type:
                              type: string
                          required:
                          - columns
                          type: object
                        type: array
                      isDeleted:
                        type: boolean
                      primaryKey:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
            required:
            - database
            - name
            type: object
          status:
            description: TableStatus defines the observed state of Table
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: schemahero-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - databases.schemahero.io
  resources:
  - databases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - databases.schemahero.io
  resources:
  - databases/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - schemas.schemahero.io
  resources:
  - migrations
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - schemas.schemahero.io
  resources:
  - migrations/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - schemas.schemahero.io
  resources:
  - tables
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - schemas.schemahero.io
  resources:
  - tables/status
  verbs:
  - get
  - update
  - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: schemahero-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: schemahero-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: schemahero-system

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: controller-webhook-server
  namespace: schemahero-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: schemahero
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: webhook-server-secret
  namespace: schemahero-system

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  name: databases.databases.schemahero.io
spec:
  group: databases.schemahero.io
  names:
    kind: Database
    listKind: DatabaseList
    plural: databases
    singular: database
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Database is the Schema for the databases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              connection:
                description: DatabaseConnection defines connection parameters for
                  the database driver
                properties:
                  cockroachdb:
                    properties:
                      uri:
                        properties:
                          value:
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                required:
                                - key
                                - name
                                type: object
                              vault:
                                properties:
                                  role:
                                    type: string
                                  secret:
                                    type: string
                                required:
                                - role
                                - secret
                                type: object
                            type: object
                        type: object
                    type: object
                  mysql:
                    properties:
                      uri:
                        properties:
                          value:
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                required:
                                - key
                                - name
                                type: object
                              vault:
                                properties:
                                  role:
                                    type: string
                                  secret:
                                    type: string
                                required:
                                - role
                                - secret
                                type: object
                            type: object
                        type: object
                    type: object
                  postgres:
                    properties:
                      uri:
                        properties:
                          value:
                            type: string
                          valueFrom:
                            properties:
                              secretKeyRef:
                                properties:
                                  key:
                                    type: string
                                  name:
                                    type: string
                                required:
                                - key
                                - name
                                type: object
                              vault:
                                properties:
                                  role:
                                    type: string
                                  secret:
                                    type: string
                                required:
                                - role
                                - secret
                                type: object
                            type: object
                        type: object
                    type: object
                type: object
              enableShellCommand:
                type: boolean
              immediateDeploy:
                type: boolean
              schemahero:
                properties:
                  image:
                    type: string
                  nodeSelector:
                    additionalProperties:
                      type: string
                    type: object
                type: object
            type: object
          status:
            description: DatabaseStatus defines the observed state of Database
            properties:
              isConnected:
                type: boolean
              lastPing:
                type: string
            required:
            - isConnected
            - lastPing
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  name: migrations.schemas.schemahero.io
spec:
  group: schemas.schemahero.io
  names:
    kind: Migration
    listKind: MigrationList
    plural: migrations
    singular: migration
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Migration is the Schema for the migrations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MigrationSpec defines the desired state of Migration
            properties:
              editedDDL:
                type: string
              generatedDDL:
                type: string
              tableName:
                type: string
              tableNamespace:
                type: string
            required:
            - tableName
            - tableNamespace
            type: object
          status:
            description: MigrationStatus defines the observed state of Migration
            properties:
              approvedAt:
                format: int64
                type: integer
              executedAt:
                format: int64
                type: integer
              invalidatedAt:
                description: InvalidatedAt is the unix nano timestamp when this plan
                  was determined to be invalid or outdated
                format: int64
                type: integer
              plannedAt:
                description: PlannedAt is the unix nano timestamp when the plan was
                  generated
                format: int64
                type: integer
              rejectedAt:
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

