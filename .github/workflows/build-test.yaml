name: build-test

on: [ pull_request ]

jobs:

  validate-go-mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - run: go mod tidy

  test-tgapi:
    runs-on: ubuntu-latest
    needs: validate-go-mod
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
    - name: setup env
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      shell: bash

    - run: make -C tgapi test

  test-tgrun:
    runs-on: ubuntu-latest
    needs: validate-go-mod
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
    - name: setup env
      run: |
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      shell: bash

    - run: make -C tgrun test

  build-web:
    runs-on: ubuntu-latest
    needs: validate-go-mod
    steps:
    - uses: actions/setup-node@v4
      with:
        node-version: '14'

    - uses: actions/checkout@v4

    - run: make -C web deps build-staging

  docker-image-tgapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: tgapi-build
        run: |
          docker build -f tgapi/deploy/Dockerfile \
            --build-arg gitsha=${GITHUB_SHA:0:7} \
            --build-arg buildtime="$(date --rfc-3339=seconds | sed 's/ /T/')" \
            -t replicated/tgapi:${GITHUB_SHA:0:7} \
            .

  docker-image-tgrun:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: tgrun-build
        run: |
          docker build -f tgrun/Dockerfile \
            --build-arg gitsha=${GITHUB_SHA:0:7} \
            --build-arg buildtime="$(date --rfc-3339=seconds | sed 's/ /T/')" \
            -t replicated/tgrun:latest \
            -t replicated/tgrun:${GITHUB_SHA:0:7} \
            .

  build-test-success:
    runs-on: ubuntu-latest
    needs:
    - validate-go-mod
    - test-tgapi
    - test-tgrun
    - build-web
    - docker-image-tgapi
    - docker-image-tgrun
    steps:
    - run: echo "::notice ::build test success"
